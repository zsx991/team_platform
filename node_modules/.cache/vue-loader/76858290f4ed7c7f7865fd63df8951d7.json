{"remainingRequest":"D:\\teamPlanProject\\teamplan\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\teamPlanProject\\teamplan\\src\\views\\menu\\menuSide.vue?vue&type=style&index=0&id=503d1b5c&scoped=true&lang=css&","dependencies":[{"path":"D:\\teamPlanProject\\teamplan\\src\\views\\menu\\menuSide.vue","mtime":1596597484705},{"path":"D:\\teamPlanProject\\teamplan\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\teamPlanProject\\teamplan\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"D:\\teamPlanProject\\teamplan\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"D:\\teamPlanProject\\teamplan\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\teamPlanProject\\teamplan\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKLmljb24gewogICAgZm9udC1zaXplOiAyOHB4Owp9Cg=="},{"version":3,"sources":["menuSide.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgDA;AACA;AACA","file":"menuSide.vue","sourceRoot":"src/views/menu","sourcesContent":["/**\r\n* @author: hao.ling\r\n* @date: 2020/7/23 14:38\r\n* @Description: 首页菜单栏\r\n*/\r\n<template>\r\n    <div id=\"menu-side\">\r\n        <a-menu mode=\"inline\" :open-keys=\"openKeys\" @openChange=\"onOpenChange\" :defaultSelectedKeys=\"selectKey\">\r\n            <a-sub-menu key=\"sub1\">\r\n                <span slot=\"title\"><my-icon type=\"icon-xitongmokuai\" style=\"font-size: 20px\"/><span>系统模块管理</span></span>\r\n                <a-menu-item key=\"1\">\r\n                    <router-link :to=\"{name:'functionalCase'}\">功能测试用例</router-link>\r\n                </a-menu-item>\r\n            </a-sub-menu>\r\n        </a-menu>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    export default {\r\n        name: \"menuSide\",\r\n        data() {\r\n            return {\r\n                rootSubmenuKeys: ['sub1', 'sub2'],\r\n                openKeys: [],\r\n                selectKey: [this.$route.path]\r\n            }\r\n        },\r\n        created() {\r\n            this.refresh()\r\n        },\r\n        methods: {\r\n            onOpenChange(openKeys) {\r\n                const latestOpenKey = openKeys.find(key => this.openKeys.indexOf(key) === -1)\r\n                this.rootSubmenuKeys.indexOf(latestOpenKey) === -1 ? this.openKeys = openKeys : this.openKeys = latestOpenKey ? [latestOpenKey] : []\r\n            },\r\n            refresh() {\r\n                for (let i = 0; i < this.selectKey.length; i++) {\r\n                    if (this.selectKey[i] === \"/functional\") {\r\n                        this.openKeys = ['sub1']\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n</script>\r\n\r\n<style scoped>\r\n    .icon {\r\n        font-size: 28px;\r\n    }\r\n</style>"]}]}