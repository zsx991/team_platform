{"remainingRequest":"D:\\teamPlanProject\\teamplan\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\teamPlanProject\\teamplan\\src\\views\\home\\verificationCode.vue?vue&type=style&index=0&id=3cb8782e&scoped=true&lang=css&","dependencies":[{"path":"D:\\teamPlanProject\\teamplan\\src\\views\\home\\verificationCode.vue","mtime":1595406694804},{"path":"D:\\teamPlanProject\\teamplan\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\teamPlanProject\\teamplan\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"D:\\teamPlanProject\\teamplan\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"D:\\teamPlanProject\\teamplan\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\teamPlanProject\\teamplan\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKLm15Y2FudmFzIHsKICAgIGJvcmRlcjogMXB4IHNvbGlkIHJnYigxOTksIDE5OCwgMTk4KTsKICAgIGJvcmRlci1yYWRpdXM6IDIwJTsKfQo="},{"version":3,"sources":["verificationCode.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiFA;AACA;AACA;AACA","file":"verificationCode.vue","sourceRoot":"src/views/home","sourcesContent":["/**\r\n* @author: hao.ling\r\n* @date: 2020/7/22 15:10\r\n* @Description: 图形验证码\r\n*/\r\n<template>\r\n    <div>\r\n        <canvas class=\"mycanvas\" width=\"80\" height=\"40\"/>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    export default {\r\n        name: \"verificationCode\",\r\n        data() {\r\n            return {\r\n                value: \"\",\r\n                code: \"1234567890abcdefghijklmnopqrstuvwxyz\"\r\n            }\r\n        },\r\n        mounted() {\r\n            this.fourCode()\r\n        },\r\n        methods: {\r\n            randomColor() {\r\n                const r = Math.floor(Math.random() * 256)\r\n                const g = Math.floor(Math.random() * 256)\r\n                const b = Math.floor(Math.random() * 256)\r\n                return \"rgb(\" + r + \",\" + g + \",\" + b + \")\"\r\n            },\r\n            fourCode() {\r\n                this.value = \"\"\r\n                for (let i = 0; i < 4; i++) {\r\n                    this.value += this.code1\r\n                }\r\n                this.doDraw()\r\n            },\r\n            code1() {\r\n                let index = Math.floor(Math.random() * (this.code.length - 1) + 1)\r\n                return this.code[index]\r\n            },\r\n            doDraw() {\r\n                const x = 20\r\n                const y = 20 + Math.random() * 8\r\n                const deg = (Math.random() * 30 * Math.PI) / 180\r\n                const canvas = document.getElementsByClassName(\"mycanvas\")\r\n                // canvas[0].width = canvas[0].width\r\n                // canvas[0].height = canvas[0].height\r\n                const canvas_width = canvas[0].width\r\n                const canvas_height = canvas[0].height\r\n                const context = canvas[0].getContext(\"2d\")\r\n                context.font = \"bold 23px 微软雅黑\"\r\n                context.fillText(this.value, 15, 30)\r\n                context.translate(x, y)\r\n                context.rotate(deg)\r\n                context.fillStyle = this.randomColor()\r\n                context.strokeStyle = this.randomColor()\r\n                context.rotate(-deg)\r\n                context.translate(-x, -y)\r\n                for (let i = 0; i <= 15; i++) {\r\n                    context.strokeStyle = this.randomColor()\r\n                    context.beginPath()\r\n                    context.moveTo(Math.random() * canvas_width, Math.random() * canvas_height)\r\n                    context.lineTo(Math.random() * canvas_width, Math.random() * canvas_height)\r\n                    context.stroke()\r\n                }\r\n                for (let j = 0; j <= 30; j++) {\r\n                    context.strokeStyle = this.randomColor()\r\n                    context.beginPath()\r\n                    const x = Math.random() * canvas_width\r\n                    const y = Math.random() * canvas_height\r\n                    context.moveTo(x, y)\r\n                    context.lineTo(x + 1, y + 1)\r\n                    context.stroke()\r\n                }\r\n            }\r\n        }\r\n    }\r\n</script>\r\n\r\n<style scoped>\r\n    .mycanvas {\r\n        border: 1px solid rgb(199, 198, 198);\r\n        border-radius: 20%;\r\n    }\r\n</style>"]}]}