{"remainingRequest":"D:\\mymy\\teamplan\\node_modules\\babel-loader\\lib\\index.js!D:\\mymy\\teamplan\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\mymy\\teamplan\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\mymy\\teamplan\\src\\views\\home\\register.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\mymy\\teamplan\\src\\views\\home\\register.vue","mtime":1596699655082},{"path":"D:\\mymy\\teamplan\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\mymy\\teamplan\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\mymy\\teamplan\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\mymy\\teamplan\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0IFZlcmlmaWNhdGlvbkNvZGUgZnJvbSAiLi92ZXJpZmljYXRpb25Db2RlIjsKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICJyZWdpc3RlciIsCiAgY29tcG9uZW50czogewogICAgVmVyaWZpY2F0aW9uQ29kZTogVmVyaWZpY2F0aW9uQ29kZQogIH0sCiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIHJlZ2lzdGVyX2Zvcm06IHRoaXMuJGZvcm0uY3JlYXRlRm9ybSh0aGlzLCB7CiAgICAgICAgbmFtZTogInJlZ2lzdGVyLWZvcm0iCiAgICAgIH0pLAogICAgICBwYXNzd29yZDogIiIsCiAgICAgIGlkZW50aWZ5Q29kZTogIiIsCiAgICAgIGlkZW50aWZ5Q29kZXM6ICIxMjM0NTY3ODkwYWJjZGVmZ2hpamtsbW5vcHFyc3R1dnd4eXoiCiAgICB9OwogIH0sCiAgbW91bnRlZDogZnVuY3Rpb24gbW91bnRlZCgpIHsKICAgIHRoaXMuaWRlbnRpZnlDb2RlID0gIiI7CiAgICB0aGlzLm1ha2VDb2RlKHRoaXMuaWRlbnRpZnlDb2RlcywgNCk7CiAgfSwKICBtZXRob2RzOiB7CiAgICAvLyDms6jlhowKICAgIHJlZ2lzdGVyOiBmdW5jdGlvbiByZWdpc3RlcihlKSB7CiAgICAgIHZhciBfdGhpcyA9IHRoaXM7CgogICAgICBlLnByZXZlbnREZWZhdWx0KCk7CiAgICAgIHRoaXMucmVnaXN0ZXJfZm9ybS52YWxpZGF0ZUZpZWxkcyhmdW5jdGlvbiAoZXJyLCB2YWx1ZXMpIHsKICAgICAgICBpZiAoIWVycikgewogICAgICAgICAgX3RoaXMuUG9zdCgiL3JlZ2lzdGVyIiwgewogICAgICAgICAgICB1c2VybmFtZTogdmFsdWVzWyd1c2VybmFtZSddLAogICAgICAgICAgICBwYXNzd29yZDogdmFsdWVzWydwYXNzd29yZCddCiAgICAgICAgICB9KS50aGVuKGZ1bmN0aW9uIChyZXMpIHsKICAgICAgICAgICAgcmVzWydjb2RlJ10gPT09IDEwMDAgPyBfdGhpcy4kbWVzc2FnZS5zdWNjZXNzKHJlc1snbWVzc2FnZSddLCAxLCBmdW5jdGlvbiAoKSB7CiAgICAgICAgICAgICAgX3RoaXMuJHJvdXRlci5wdXNoKHsKICAgICAgICAgICAgICAgIG5hbWU6ICJsb2dpbiIKICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgfSkgOiBfdGhpcy4kbWVzc2FnZS5lcnJvcihyZXNbJ21lc3NhZ2UnXSk7CiAgICAgICAgICB9KTsKICAgICAgICB9CiAgICAgIH0pOwogICAgfSwKICAgIC8vIOiOt+WPluWvhueggQogICAgZ2V0UGFzc3dvcmQ6IGZ1bmN0aW9uIGdldFBhc3N3b3JkKHJ1bGVzLCB2YWx1ZSwgY2FsbGJhY2spIHsKICAgICAgdGhpcy5wYXNzd29yZCA9IHZhbHVlOwogICAgICBjYWxsYmFjaygpOwogICAgfSwKICAgIC8vIOehruiupOWvhueggQogICAgY29uZmlybVB3ZDogZnVuY3Rpb24gY29uZmlybVB3ZChydWxlcywgdmFsdWUsIGNhbGxiYWNrKSB7CiAgICAgIGlmICh2YWx1ZSAmJiB0aGlzLnBhc3N3b3JkICE9PSB2YWx1ZSkgewogICAgICAgIGNhbGxiYWNrKCLkuKTmrKHlr4bnoIHkuI3kuIDoh7QiKTsKICAgICAgfQoKICAgICAgY2FsbGJhY2soKTsKICAgIH0sCiAgICAvLyDnoa7orqTpqozor4HnoIEKICAgIGNvbmZpcm1Db2RlOiBmdW5jdGlvbiBjb25maXJtQ29kZShydWxlcywgdmFsdWUsIGNhbGxiYWNrKSB7CiAgICAgIGlmICh2YWx1ZSAhPT0gdGhpcy5pZGVudGlmeUNvZGUpIHsKICAgICAgICBjYWxsYmFjaygi6aqM6K+B56CB6ZSZ6K+vIik7CiAgICAgIH0KCiAgICAgIGNhbGxiYWNrKCk7CiAgICB9LAogICAgLy8g5Yi35paw5Zu+54mH6aqM6K+B56CBCiAgICByZWZyZXNoQ29kZTogZnVuY3Rpb24gcmVmcmVzaENvZGUoKSB7CiAgICAgIHRoaXMuaWRlbnRpZnlDb2RlID0gIiI7CiAgICAgIHRoaXMubWFrZUNvZGUodGhpcy5pZGVudGlmeUNvZGVzLCA0KTsKICAgIH0sCiAgICAvLyDnlJ/miJDpmo/mnLrmlbAKICAgIHJhbmRvbU51bTogZnVuY3Rpb24gcmFuZG9tTnVtKG1pbiwgbWF4KSB7CiAgICAgIG1heCA9IG1heCArIDE7CiAgICAgIHJldHVybiBNYXRoLmZsb29yKE1hdGgucmFuZG9tKCkgKiAobWF4IC0gbWluKSArIG1pbik7CiAgICB9LAogICAgLy8g6ZqP5py66YCJ5oupCiAgICBtYWtlQ29kZTogZnVuY3Rpb24gbWFrZUNvZGUoZGF0YSwgbGVuKSB7CiAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgbGVuOyBpKyspIHsKICAgICAgICB0aGlzLmlkZW50aWZ5Q29kZSArPSBkYXRhW3RoaXMucmFuZG9tTnVtKDAsIGRhdGEubGVuZ3RoIC0gMSldOwogICAgICB9CiAgICB9CiAgfQp9Ow=="},{"version":3,"sources":["register.vue"],"names":[],"mappings":"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","sourcesContent":["/**\r\n* @author: hao.ling\r\n* @date: 2020/7/22 14:01\r\n* @Description: 注册页面\r\n*/\r\n<template>\r\n    <div id=\"register\">\r\n        <h1 align=\"center\">注册</h1>\r\n        <a-form :form=\"register_form\" :label-col=\"{span:7}\" @submit=\"register\">\r\n            <a-form-item label=\"用户名\" style=\"margin-bottom: 5px\" class=\"register-form\">\r\n                <a-input size=\"small\" placeholder=\"请输入用户名\" class=\"input\"\r\n                         v-decorator=\"['username',{rules:[{required:true,message:'请输入用户名'}]}]\">\r\n                    <my-icon class=\"icon\" slot=\"prefix\" type=\"icon-user\"/>\r\n                </a-input>\r\n            </a-form-item>\r\n            <a-form-item label=\"密码\" style=\"margin-bottom: 5px\" class=\"register-form\">\r\n                <a-input-password size=\"small\" placeholder=\"请输入密码\" class=\"input\"\r\n                                  v-decorator=\"['password',{rules:[{required: true,message:'请输入密码'},{validator:getPassword}]}]\">\r\n                    <my-icon class=\"icon\" slot=\"prefix\" type=\"icon-password\"/>\r\n                </a-input-password>\r\n            </a-form-item>\r\n            <a-form-item label=\"确认密码\" style=\"margin-bottom: 5px\" class=\"register-form\">\r\n                <a-input-password size=\"small\" placeholder=\"请确认密码\" class=\"input\"\r\n                                  v-decorator=\"['confirmPwd',{rules:[{required: true,message:'请确认密码'},{validator:confirmPwd}]}]\">\r\n                    <my-icon class=\"icon\" slot=\"prefix\" type=\"icon-password\"/>\r\n                </a-input-password>\r\n            </a-form-item>\r\n            <a-form-item label=\"验证码\" style=\"margin-bottom: -10px\" class=\"code-form\">\r\n                <a-input size=\"small\" placeholder=\"验证码\" style=\"width: 100px;z-index: 50\"\r\n                         v-decorator=\"['picture',{rules:[{required: true,message:'请输入验证码'},{validator:confirmCode}]}]\">\r\n                    <my-icon class=\"icon\" slot=\"prefix\" type=\"icon-yanzhengma\"/>\r\n                </a-input>\r\n                <div @click=\"refreshCode\">\r\n                    <verification-code :identifyCode=\"identifyCode\" style=\"cursor: pointer\"/>\r\n                </div>\r\n            </a-form-item>\r\n            <a-button type=\"primary\" class=\"btn\" style=\"margin-left: 90px\">\r\n                <router-link to=\"login\">登录</router-link>\r\n            </a-button>\r\n            <a-button type=\"primary\" class=\"btn\" @click=\"register\">注册</a-button>\r\n        </a-form>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    import VerificationCode from \"./verificationCode\";\r\n\r\n    export default {\r\n        name: \"register\",\r\n        components: {VerificationCode},\r\n        data() {\r\n            return {\r\n                register_form: this.$form.createForm(this, {name: \"register-form\"}),\r\n                password: \"\",\r\n                identifyCode: \"\",\r\n                identifyCodes: \"1234567890abcdefghijklmnopqrstuvwxyz\"\r\n            }\r\n        },\r\n        mounted() {\r\n            this.identifyCode = \"\"\r\n            this.makeCode(this.identifyCodes, 4)\r\n        },\r\n        methods: {\r\n            // 注册\r\n            register(e) {\r\n                e.preventDefault()\r\n                this.register_form.validateFields((err, values) => {\r\n                    if (!err) {\r\n                        this.Post(\"/register\", {\r\n                            username: values['username'], password: values['password']\r\n                        }).then(res => {\r\n                            res['code'] === 1000 ? this.$message.success(res['message'], 1, () => {\r\n                                this.$router.push({name: \"login\"})\r\n                            }) : this.$message.error(res['message'])\r\n                        })\r\n                    }\r\n                })\r\n            },\r\n            // 获取密码\r\n            getPassword(rules, value, callback) {\r\n                this.password = value\r\n                callback()\r\n            },\r\n            // 确认密码\r\n            confirmPwd(rules, value, callback) {\r\n                if (value && this.password !== value) {\r\n                    callback(\"两次密码不一致\")\r\n                }\r\n                callback()\r\n            },\r\n            // 确认验证码\r\n            confirmCode(rules, value, callback) {\r\n                if (value !== this.identifyCode) {\r\n                    callback(\"验证码错误\")\r\n                }\r\n                callback()\r\n            },\r\n            // 刷新图片验证码\r\n            refreshCode() {\r\n                this.identifyCode = \"\"\r\n                this.makeCode(this.identifyCodes, 4)\r\n            },\r\n            // 生成随机数\r\n            randomNum(min, max) {\r\n                max = max + 1\r\n                return Math.floor(Math.random() * (max - min) + min)\r\n            },\r\n            // 随机选择\r\n            makeCode(data, len) {\r\n                for (let i = 0; i < len; i++) {\r\n                    this.identifyCode += data[this.randomNum(0, data.length - 1)]\r\n                }\r\n            }\r\n        }\r\n    }\r\n</script>\r\n\r\n<style scoped>\r\n    #register {\r\n        width: 380px;\r\n        height: 320px;\r\n        background-color: white;\r\n        margin-top: 100px;\r\n        margin-left: 500px;\r\n        border: 1px solid black;\r\n        border-radius: 15px;\r\n    }\r\n\r\n    .input {\r\n        width: 200px;\r\n    }\r\n\r\n    .icon {\r\n        font-size: 16px;\r\n        margin-left: -3px;\r\n    }\r\n\r\n    .btn {\r\n        margin-top: 10px;\r\n        margin-right: 50px;\r\n    }\r\n</style>\r\n<style>\r\n    .code-form .ant-form-explain {\r\n        margin-top: -20px;\r\n        margin-left: 110px;\r\n    }\r\n\r\n    .register-form .ant-form-explain {\r\n        margin-top: -20px;\r\n        margin-left: 110px;\r\n        margin-bottom: -20px;\r\n    }\r\n</style>"],"sourceRoot":"src/views/home"}]}